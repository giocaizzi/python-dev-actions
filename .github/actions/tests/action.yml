name: Test
description: Run tests with pytest

inputs:
  backend: 
    description: "Backend to use (poetry, setuptools)"
    default: "poetry"

runs:
  using : 'composite'
  steps:
    # pytest params specified in pytest.ini,
    # check if pytest.ini is in the root directory
    - name: Check pytest.ini on Linux and MacOS
      shell : bash
      if: inputs.os == 'ubuntu-latest' || inputs.os == 'macos-latest'
      run: |
        echo ${{inputs.os}}
        if [ -f pytest.ini ]; then
            echo "pytest.ini found"
        else
            echo "pytest.ini not found"
            echo "::warning ::pytest.ini not found, using default pytest params"
        fi

    - name: Check pytest.ini on Windows
      shell : pwsh
      if: inputs.os == 'windows-latest'
      run: |
        Write-Host ${{inputs.os}}
        if (Test-Path pytest.ini) {
          Write-Host "pytest.ini found"
        } else {
          Write-Host "pytest.ini not found"
          Write-Host "::warning ::pytest.ini not found, using default pytest params"
        }

    - name: Run tests with setuptools backend
      if: inputs.backend == 'setuptools'
      shell: bash
      run: |
        pytest

    - name: Run tests with poetry
      if: inputs.backend == 'poetry'
      shell: bash
      run: |
        poetry run pytest

    # upload coverage to codecov only once
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.10' && inputs.os == 'ubuntu-latest'

